     1                                  ; Christiaan Cronje
     2                                  ; COSC 2329.01
     3                                  ; 3/26/17
     4                                  
     5                                  	org 100h
     6                                  
     7                                  section .data	
     8 00000000 456E7465722061204B-     prompt1 db	"Enter a Key (0-31): ",'$'
     9 00000009 65792028302D333129-
    10 00000012 3A2024             
    11 00000015 456E7465722061204D-     prompt2	db	"Enter a Message: ",'$'
    12 0000001E 6573736167653A2024 
    13 00000027 0D0A24                  crlf	db	13,10,'$'
    14                                  
    15                                  section .bss
    16 00000000 <res 00000002>          keyTemp	resw 1
    17 00000002 <res 00000002>          num1	resw 1
    18 00000004 <res 00000002>          char	resw 1
    19                                  
    20                                  section	.text
    21                                  ; print first prompt
    22                                  tooBigSmall:
    23 00000000 B409                    	mov	ah,9		; display string function
    24 00000002 BA[0000]                	mov	dx,prompt1	; load dx with address of prompt
    25 00000005 CD21                    	int	21h			; display
    26 00000007 31DB                    	xor bx, bx	;store key in bx, fill 0
    27                                  while1:
    28                                  ; get the char from the user
    29 00000009 B401                    	mov	ah, 1		; read char fcn
    30 0000000B CD21                    	int	21h			; read it
    31 0000000D 3C30                    	cmp al,30h		; is digit?
    32 0000000F 7C19                    	jl done1		; jump is less than 0
    33 00000011 3C39                    	cmp al,39h
    34 00000013 7F15                    	jg done1		; jump if greater than 9
    35 00000015 B400                    	mov ah, 0
    36 00000017 2C30                    	sub al, 30h		; convert char to number
    37 00000019 A3[0000]                	mov [keyTemp], ax	; store ax
    38 0000001C 89D8                    	mov ax, bx		; mov to ax for mul
    39 0000001E B10A                    	mov cl, 10		; mul by 10
    40 00000020 F6E1                    	mul cl
    41 00000022 89C3                    	mov bx, ax		; mov multiplied val to key
    42 00000024 031E[0000]              	add bx, word [keyTemp]	; add new digit
    43 00000028 EBDF                    	jmp while1		; repeat while in range
    44                                  done1:
    45 0000002A 83FB00                  	cmp bx, 0		; is within allowed range
    46 0000002D 7CD1                    	jl tooBigSmall 	; is less than 0
    47 0000002F 83FB1F                  	cmp bx, 31
    48 00000032 7FCC                    	jg tooBigSmall 	; is greater than 31
    49                                  
    50 00000034 B90000                  	mov cx, 0		; initialize counter to 0
    51                                  ; prompt user to enter the message
    52 00000037 B409                    	mov	ah,9		; display string function
    53 00000039 BA[1500]                	mov	dx,prompt2	; load dx with address of prompt
    54 0000003C CD21                    	int	21h			; display
    55                                  dowhile:
    56                                  ; read a character from the keyboard
    57 0000003E B401                    	mov	ah, 1		; read char fcn
    58 00000040 CD21                    	int	21h			; read it
    59 00000042 3C0D                    	cmp al, 13
    60 00000044 7408                    	je endwhile		; while character is not the CR 
    61                                  
    62 00000046 30E4                    	xor ah, ah		;clear ah
    63 00000048 31D8                    	xor ax, bx		; char <-- char XOR key
    64 0000004A 50                      	push ax			; push char on the stack
    65 0000004B 41                      	inc cx			; increment the counter
    66 0000004C EBF0                    	jmp dowhile
    67                                  endwhile:
    68                                  ; go to the next line
    69 0000004E B409                    	mov	ah, 9		; display string fcn
    70 00000050 BA[2700]                	mov	dx,crlf		; cr/lf pair
    71 00000053 CD21                    	int	21h
    72                                  
    73                                  displayLoop:
    74 00000055 B402                    	mov ah, 2		; prep to display char
    75 00000057 5A                      	pop dx			; pop char off the stack
    76 00000058 CD21                    	int 21h			; display char
    77 0000005A E2F9                    	loop displayLoop
    78                                  
    79                                  ; exit to DOS
    80 0000005C B44C                    	mov	ah,4Ch		; DOS exit fcn
    81 0000005E B000                    	mov	al,0		; normal termination
    82 00000060 CD21                    	int	21h			; we're done
