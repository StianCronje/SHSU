Notes 4/11/17
Data Structures
Burris

B tree
    every node has  <= m children
    every node except root and leaves has >= 2/m nodes
    a root has at least 2 children, else its a leaf
    all leaves appear on the same level and carry no info
    a non-leaf node with k children contains k -1 keys

b tree and algorythm equivalence grow from bottom up

Sorting
    simple sort - comparative exchange
        passes = n - 1
        compares = n(n-1)/2
        exchanges = 0 .. n(n-1)/2
        time = #compares + #exchanges
        time = n^2
    true bubble sort - comparative exchange
        best for lists 4 <= n <= 11
        passes = n - 1
        compares = n(n-1)/2
        exchanges = 0 .. n(n-1)/2
        time = #compares + #exchanges
        time = n^2
    sort by selection
        find biggest or smallest and exchange with last or first value respectively
        passes = n - 1
        compares = n(n-1)/2
        exchanges = 0 .. (n-1)
        time = n^2
    shell sort

    quicksort

    
        